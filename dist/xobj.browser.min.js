var x_=function(){"use strict";var a=function(r,n){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return function(r,n){var t=[],e=!0,i=!1,u=void 0;try{for(var o,a=r[Symbol.iterator]();!(e=(o=a.next()).done)&&(t.push(o.value),!n||t.length!==n);e=!0);}catch(r){i=!0,u=r}finally{try{!e&&a.return&&a.return()}finally{if(i)throw u}}return t}(r,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")};return{merge:function(){for(var n={},r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.forEach(function(r){Object.assign(n,r)}),n},only:function(n,t){if(void 0===t||"*"===t||Array.isArray(t)&&!t.length||!0===t)return n;"string"==typeof t&&(t=[t]);var e={};return Object.keys(n).filter(function(r){return t.includes(r)}).forEach(function(r){e[r]=n[r]}),e},has:function(n,u){if(Array.isArray(u))return Object.keys(n).filter(function(r){return u.includes(r)}).every(function(r){return r in n});if("function"==typeof u){var o=[];return Object.entries(n).forEach(function(r){var n=a(r,2),t=n[0],e=n[1],i=u.apply(null,[t,e]);o.push(i)}),!!o.length&&!!o.find(Boolean)}return u in n}}}();
